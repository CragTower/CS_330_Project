// Vertex Shader Code (GLSL)
// _________________________
#version 440 core
layout(location = 0) in vec3 position;  // Vertex data from Vertex Attrib Pointer 0
layout(location = 1) in vec3 normal;    // Color data from Vertex Attrib Pointer 1
layout(location = 2) in vec2 texture;   // Texture data from Vertex Attrib Pointer 2

out vec3 vertexNormal;
out vec3 vertexFragmentPos;
out vec2 vertexTexture;

//Global variables for the transform matrices
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
    gl_Position = projection * view * model * vec4(position, 1.0f); // transforms vertices to clip coordinates
    
    vertexFragmentPos = vec3(model * vec4(position, 1.0f));

    vertexNormal = mat3(transpose(inverse(model))) * normal;
    vertexTexture = texture;
}
